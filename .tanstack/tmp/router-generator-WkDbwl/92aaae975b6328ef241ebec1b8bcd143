/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as MapRouteImport } from './routes/map'
import { Route as LoginRouteImport } from './routes/login'
import { Route as _authedRouteImport } from './routes/__authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as _authedDashboardIndexRouteImport } from './routes/__authed.dashboard.index'
import { Route as _authedDashboardSurveyIndexRouteImport } from './routes/__authed.dashboard.survey.index'
import { Route as _authedDashboardResearchIndexRouteImport } from './routes/__authed.dashboard.research.index'
import { Route as _authedDashboardProjectIndexRouteImport } from './routes/__authed.dashboard.project.index'
import { Route as _authedDashboardMunicipalityIndexRouteImport } from './routes/__authed.dashboard.municipality.index'
import { Route as _authedDashboardSurveyIdRouteImport } from './routes/__authed.dashboard.survey.$id'
import { Route as _authedDashboardProjectIdRouteImport } from './routes/__authed.dashboard.project.$id'
import { Route as _authedDashboardResearchIdIndexRouteImport } from './routes/__authed.dashboard.research.$id.index'
import { Route as _authedDashboardResearchIdProjectIdRouteImport } from './routes/__authed.dashboard.research.$id.$projectId'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const MapRoute = MapRouteImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _authedRoute = _authedRouteImport.update({
  id: '/__authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const _authedDashboardIndexRoute = _authedDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => _authedRoute,
} as any)
const _authedDashboardSurveyIndexRoute =
  _authedDashboardSurveyIndexRouteImport.update({
    id: '/dashboard/survey/',
    path: '/dashboard/survey/',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardResearchIndexRoute =
  _authedDashboardResearchIndexRouteImport.update({
    id: '/dashboard/research/',
    path: '/dashboard/research/',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardProjectIndexRoute =
  _authedDashboardProjectIndexRouteImport.update({
    id: '/dashboard/project/',
    path: '/dashboard/project/',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardMunicipalityIndexRoute =
  _authedDashboardMunicipalityIndexRouteImport.update({
    id: '/dashboard/municipality/',
    path: '/dashboard/municipality/',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardSurveyIdRoute =
  _authedDashboardSurveyIdRouteImport.update({
    id: '/dashboard/survey/$id',
    path: '/dashboard/survey/$id',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardProjectIdRoute =
  _authedDashboardProjectIdRouteImport.update({
    id: '/dashboard/project/$id',
    path: '/dashboard/project/$id',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardResearchIdIndexRoute =
  _authedDashboardResearchIdIndexRouteImport.update({
    id: '/dashboard/research/$id/',
    path: '/dashboard/research/$id/',
    getParentRoute: () => _authedRoute,
  } as any)
const _authedDashboardResearchIdProjectIdRoute =
  _authedDashboardResearchIdProjectIdRouteImport.update({
    id: '/dashboard/research/$id/$projectId',
    path: '/dashboard/research/$id/$projectId',
    getParentRoute: () => _authedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof _authedDashboardIndexRoute
  '/dashboard/project/$id': typeof _authedDashboardProjectIdRoute
  '/dashboard/survey/$id': typeof _authedDashboardSurveyIdRoute
  '/dashboard/municipality': typeof _authedDashboardMunicipalityIndexRoute
  '/dashboard/project': typeof _authedDashboardProjectIndexRoute
  '/dashboard/research': typeof _authedDashboardResearchIndexRoute
  '/dashboard/survey': typeof _authedDashboardSurveyIndexRoute
  '/dashboard/research/$id/$projectId': typeof _authedDashboardResearchIdProjectIdRoute
  '/dashboard/research/$id': typeof _authedDashboardResearchIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof _authedDashboardIndexRoute
  '/dashboard/project/$id': typeof _authedDashboardProjectIdRoute
  '/dashboard/survey/$id': typeof _authedDashboardSurveyIdRoute
  '/dashboard/municipality': typeof _authedDashboardMunicipalityIndexRoute
  '/dashboard/project': typeof _authedDashboardProjectIndexRoute
  '/dashboard/research': typeof _authedDashboardResearchIndexRoute
  '/dashboard/survey': typeof _authedDashboardSurveyIndexRoute
  '/dashboard/research/$id/$projectId': typeof _authedDashboardResearchIdProjectIdRoute
  '/dashboard/research/$id': typeof _authedDashboardResearchIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__authed': typeof _authedRouteWithChildren
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/register': typeof RegisterRoute
  '/__authed/dashboard/': typeof _authedDashboardIndexRoute
  '/__authed/dashboard/project/$id': typeof _authedDashboardProjectIdRoute
  '/__authed/dashboard/survey/$id': typeof _authedDashboardSurveyIdRoute
  '/__authed/dashboard/municipality/': typeof _authedDashboardMunicipalityIndexRoute
  '/__authed/dashboard/project/': typeof _authedDashboardProjectIndexRoute
  '/__authed/dashboard/research/': typeof _authedDashboardResearchIndexRoute
  '/__authed/dashboard/survey/': typeof _authedDashboardSurveyIndexRoute
  '/__authed/dashboard/research/$id/$projectId': typeof _authedDashboardResearchIdProjectIdRoute
  '/__authed/dashboard/research/$id/': typeof _authedDashboardResearchIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/map'
    | '/register'
    | '/dashboard'
    | '/dashboard/project/$id'
    | '/dashboard/survey/$id'
    | '/dashboard/municipality'
    | '/dashboard/project'
    | '/dashboard/research'
    | '/dashboard/survey'
    | '/dashboard/research/$id/$projectId'
    | '/dashboard/research/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/map'
    | '/register'
    | '/dashboard'
    | '/dashboard/project/$id'
    | '/dashboard/survey/$id'
    | '/dashboard/municipality'
    | '/dashboard/project'
    | '/dashboard/research'
    | '/dashboard/survey'
    | '/dashboard/research/$id/$projectId'
    | '/dashboard/research/$id'
  id:
    | '__root__'
    | '/'
    | '/__authed'
    | '/login'
    | '/map'
    | '/register'
    | '/__authed/dashboard/'
    | '/__authed/dashboard/project/$id'
    | '/__authed/dashboard/survey/$id'
    | '/__authed/dashboard/municipality/'
    | '/__authed/dashboard/project/'
    | '/__authed/dashboard/research/'
    | '/__authed/dashboard/survey/'
    | '/__authed/dashboard/research/$id/$projectId'
    | '/__authed/dashboard/research/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _authedRoute: typeof _authedRouteWithChildren
  LoginRoute: typeof LoginRoute
  MapRoute: typeof MapRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/map': {
      id: '/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof MapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authed': {
      id: '/__authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authed/dashboard/': {
      id: '/__authed/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _authedDashboardIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/survey/': {
      id: '/__authed/dashboard/survey/'
      path: '/dashboard/survey'
      fullPath: '/dashboard/survey'
      preLoaderRoute: typeof _authedDashboardSurveyIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/research/': {
      id: '/__authed/dashboard/research/'
      path: '/dashboard/research'
      fullPath: '/dashboard/research'
      preLoaderRoute: typeof _authedDashboardResearchIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/project/': {
      id: '/__authed/dashboard/project/'
      path: '/dashboard/project'
      fullPath: '/dashboard/project'
      preLoaderRoute: typeof _authedDashboardProjectIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/municipality/': {
      id: '/__authed/dashboard/municipality/'
      path: '/dashboard/municipality'
      fullPath: '/dashboard/municipality'
      preLoaderRoute: typeof _authedDashboardMunicipalityIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/survey/$id': {
      id: '/__authed/dashboard/survey/$id'
      path: '/dashboard/survey/$id'
      fullPath: '/dashboard/survey/$id'
      preLoaderRoute: typeof _authedDashboardSurveyIdRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/project/$id': {
      id: '/__authed/dashboard/project/$id'
      path: '/dashboard/project/$id'
      fullPath: '/dashboard/project/$id'
      preLoaderRoute: typeof _authedDashboardProjectIdRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/research/$id/': {
      id: '/__authed/dashboard/research/$id/'
      path: '/dashboard/research/$id'
      fullPath: '/dashboard/research/$id'
      preLoaderRoute: typeof _authedDashboardResearchIdIndexRouteImport
      parentRoute: typeof _authedRoute
    }
    '/__authed/dashboard/research/$id/$projectId': {
      id: '/__authed/dashboard/research/$id/$projectId'
      path: '/dashboard/research/$id/$projectId'
      fullPath: '/dashboard/research/$id/$projectId'
      preLoaderRoute: typeof _authedDashboardResearchIdProjectIdRouteImport
      parentRoute: typeof _authedRoute
    }
  }
}

interface _authedRouteChildren {
  _authedDashboardIndexRoute: typeof _authedDashboardIndexRoute
  _authedDashboardProjectIdRoute: typeof _authedDashboardProjectIdRoute
  _authedDashboardSurveyIdRoute: typeof _authedDashboardSurveyIdRoute
  _authedDashboardMunicipalityIndexRoute: typeof _authedDashboardMunicipalityIndexRoute
  _authedDashboardProjectIndexRoute: typeof _authedDashboardProjectIndexRoute
  _authedDashboardResearchIndexRoute: typeof _authedDashboardResearchIndexRoute
  _authedDashboardSurveyIndexRoute: typeof _authedDashboardSurveyIndexRoute
  _authedDashboardResearchIdProjectIdRoute: typeof _authedDashboardResearchIdProjectIdRoute
  _authedDashboardResearchIdIndexRoute: typeof _authedDashboardResearchIdIndexRoute
}

const _authedRouteChildren: _authedRouteChildren = {
  _authedDashboardIndexRoute: _authedDashboardIndexRoute,
  _authedDashboardProjectIdRoute: _authedDashboardProjectIdRoute,
  _authedDashboardSurveyIdRoute: _authedDashboardSurveyIdRoute,
  _authedDashboardMunicipalityIndexRoute:
    _authedDashboardMunicipalityIndexRoute,
  _authedDashboardProjectIndexRoute: _authedDashboardProjectIndexRoute,
  _authedDashboardResearchIndexRoute: _authedDashboardResearchIndexRoute,
  _authedDashboardSurveyIndexRoute: _authedDashboardSurveyIndexRoute,
  _authedDashboardResearchIdProjectIdRoute:
    _authedDashboardResearchIdProjectIdRoute,
  _authedDashboardResearchIdIndexRoute: _authedDashboardResearchIdIndexRoute,
}

const _authedRouteWithChildren =
  _authedRoute._addFileChildren(_authedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _authedRoute: _authedRouteWithChildren,
  LoginRoute: LoginRoute,
  MapRoute: MapRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
